name: "Terraform CI/CD"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform-Actions"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_USER_REGION }}

      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v1
          
      - name: list files
        run: |
          echo "Listing files in $(pwd):"
          ls

      - name: "Terraform Init"
        run: terraform init

      - name: "Terraform Format"
        run: terraform fmt
      
      - name: "Terraform Format Check"
        run: terraform fmt -check

      - name: "Terraform Validate"
        run: terraform validate

      - name: "Terraform Plan"
        if: github.event_name == 'pull_request'
        run: terraform plan

      - name: "Terraform Apply"
        if: github.ref == 'refs/heads/main'
        run: terraform apply --auto-approve

  s3-update:
    name: "Update S3 Bucket"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_USER_REGION }}

      - shell: pwsh
        name: Check File Changes 
        id: check_file_changed
        run: |
          $diff = git diff --name-only HEAD^ HEAD
          $SourceDiff = $diff | Where-Object { $_ -match '^WebAppResources/ReactApp/dist/' }
          $HasDiff = $SourceDiff.Length -gt 0
          echo "src_changed=$HasDiff" >> $env:GITHUB_OUTPUT

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli

      - name: Update S3 Bucket
        if: steps.check_file_changed.outputs.src_changed == 'True'
        run: |
          aws s3 sync WebAppResources/ReactApp/dist/ s3://${{ secrets.AWS_S3_BUCKET_NAME }}/ --delete --exclude "tfstate-key/*"
          aws cloudfront create-invalidation --distribution-id '${{ secrets.AWS_CLOUDFRONT_ID }}' --paths '/*'

  upload-key:
    name: "Upload EC2 Private Key"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        
      - name: Create temporary SSH key file
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > ~/.ssh/id_rsa.pem
          chmod 400 ~/.ssh/id_rsa.pem
          
      - name: Upload EC2 Private Key
        uses: actions/upload-artifact@v3
        with:
          name: ec2-private-key
          path: ~/.ssh/

  ec2-update:
    name: "Update EC2 Instance"
    runs-on: ubuntu-latest
    needs: [upload-key]

    steps:
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_USER_REGION }}

      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Download SSH Key
        uses: actions/download-artifact@v3
        with:
          name: ec2-private-key
          path: ~/.ssh/

      - shell: pwsh
        name: Check File Changes 
        id: check_file_changed
        run: |
          $diff = git diff --name-only HEAD^ HEAD
          $SourceDiff = $diff | Where-Object { $_ -match '^WebAppResources/WebServer/Server.py' }
          $HasDiff = $SourceDiff.Length -gt 0
          echo "src_changed=$HasDiff" >> $env:GITHUB_OUTPUT

      - name: Install SSH Client
        run: |
          sudo apt-get update
          sudo apt-get install openssh-client

      - name: Update EC2 Files
        if: steps.check_file_changed.outputs.src_changed == 'True'
        run: |
          chmod 400 ~/.ssh/id_rsa.pem
          ssh-keyscan -H ${{ secrets.AWS_EC2_PUBLIC_IPV4_DNS }} >> ~/.ssh/known_hosts
          scp -i ~/.ssh/id_rsa.pem WebAppResources/WebServer/Server.py ${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_EC2_PUBLIC_IPV4_DNS }}:${{ secrets.AWS_EC2_SERVER_DIR }}/
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_EC2_PUBLIC_IPV4_DNS }} "sudo systemctl restart gunicorn"

